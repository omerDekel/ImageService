using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using ImageService.Logging.Modal;
using System.Collections;

namespace ImageService.Logging
{
    public class LogingBuffer
    {
        private ArrayList logsList;

        /// <summary>
        /// This function is a constractor of LogingBuffer, that creates an emply log list. 
        /// </summary>
        public LogingBuffer()
        {
            this.logsList = new ArrayList();
        }

        /// <summary>
        /// This is a constrctor that creates new logging buffer, that contains all,
        /// the logs stored in the list og logs it gets as a paraameter. 
        /// </summary>
        /// <param name="copy">A list of logs.</param>
        public LogingBuffer(List<MessageRecievedEventArgs> copy)
        {
            this.logsList = new ArrayList();
            this.logsList.AddRange(copy);
        }

        /// <summary>
        /// his funnction returns the list of the logs the Logging bugger contains.
        /// </summary>
        /// <returns>The list of the logs the Logging bugger contains</returns>
        public ArrayList getLogsList()
        {
            return this.logsList;
        }

        /// <summary>
        /// This funnction returns the list of the logs the Logging bugger contains,
        /// and empties the logs list.
        /// </summary>
        /// <returns>The list of the logs the Logging bugger contains.</returns>
        public ArrayList FlushlogsList()
        {
            ArrayList listToReturn = this.logsList;
            this.logsList = new ArrayList();
            return this.logsList;
        }

        /// <summary>
        /// This function is invoked when the service generates a log. The funtion adds the log to
        /// the log list the LoggingBuffer holds.
        /// </summary>
        /// <param name="sender">The ILoggimg service sent the log was generated by the service.</param>
        /// <param name="args">event args - contains the log the service ganereted.</param>
        public void AddLog(object sender, MessageRecievedEventArgs args)
        {
            this.logsList.Add(args);
        }

        public ArrayList getLogsFromNumber(int number, ILoggingService logger)
        {
            ArrayList logsToRrturn = new ArrayList();
            if(this.logsList.Count == number)
            {
                // Retun an empty list
                return logsToRrturn;
            }
                if (this.logsList.Count - number > 50)
            {
                logsToRrturn.AddRange(this.logsList.GetRange(number, number + 50));
            } else
            {
                logsToRrturn.AddRange(this.logsList.GetRange(number, logsList.Count -1));
            }
            return logsToRrturn;
        }
    }
}
